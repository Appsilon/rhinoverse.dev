{"version":3,"sources":["main.js"],"names":["desktopHexData","hexGrid","document","getElementById","getCell","width","height","total","i","cell","createElement","className","innerHTML","style","margin","marginTop","marginLeft","totalInRow","containerWidth","clientWidth","cellWidth","cellHeight","appendChild"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AAEA,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAhB;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,CAAvB,KAA6B;AAC3C,QAAMC,IAAI,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,KAAvB,CAAb;AACAD,EAAAA,IAAI,CAACE,SAAL,GAAiB,gBAAjB;AACAF,EAAAA,IAAI,CAACG,SAAL,GAAkB;;;;GAAlB;AAKAH,EAAAA,IAAI,CAACI,KAAL,CAAWR,KAAX,GAAoB,GAAEA,KAAM,IAA5B;AACAI,EAAAA,IAAI,CAACI,KAAL,CAAWP,MAAX,GAAqB,GAAEA,MAAO,IAA9B;AACAG,EAAAA,IAAI,CAACI,KAAL,CAAWC,MAAX,GAAqB,GAAE,CAAC,CAAE,IAA1B;AACAL,EAAAA,IAAI,CAACI,KAAL,CAAWE,SAAX,GAAwB,GAAE,CAAC,IAAD,GAAQT,MAAO,IAAzC;;AAEA,MAAIE,CAAC,KAAK,CAAV,EAAa;AACXC,IAAAA,IAAI,CAACI,KAAL,CAAWG,UAAX,GAAyB,GAAE,CAAC,GAAD,GAAOX,KAAM,IAAxC;AACD;;AAED,SAAOI,IAAP;AACD,CAlBD;;AAoBA,MAAMQ,UAAU,GAAG,CAAnB;AACA,MAAMC,cAAc,GAAGjB,OAAO,CAACkB,WAA/B;AACA,MAAMC,SAAS,GAAGF,cAAc,GAAGD,UAAnC;AACA,MAAMI,UAAU,GAAGD,SAAS,GAAG,MAA/B;;AAEA,KAAI,IAAIZ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,EAAnB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BP,EAAAA,OAAO,CAACqB,WAAR,CAAoBlB,OAAO,CAACgB,SAAD,EAAYC,UAAZ,EAAwBJ,UAAxB,EAAoCT,CAApC,CAA3B;AACD","sourcesContent":["import { desktopHexData } from './hex.js';\n\nconst hexGrid = document.getElementById('hex-grid');\n\nconst getCell = (width, height, total, i) => {\n  const cell = document.createElement('div');\n  cell.className = 'hex-grid__cell';\n  cell.innerHTML = `\n    <svg class=\"hex-grid__svg\" viewBox=\"0 0 100 115.47\">\n      <use href=\"images/vectors.svg#hex\"></use>\n    </svg>\n  `;\n  cell.style.width = `${width}px`;\n  cell.style.height = `${height}px`;\n  cell.style.margin = `${-1}px`;\n  cell.style.marginTop = `${-0.25 * height}px`;\n\n  if (i === 7) {\n    cell.style.marginLeft = `${-0.5 * width}px`;\n  }\n\n  return cell;\n}\n\nconst totalInRow = 7;\nconst containerWidth = hexGrid.clientWidth;\nconst cellWidth = containerWidth / totalInRow;\nconst cellHeight = cellWidth * 1.1547;\n\nfor(let i = 0; i < 20; i++) {\n  hexGrid.appendChild(getCell(cellWidth, cellHeight, totalInRow, i))\n}\n\n"],"file":"main.js"}